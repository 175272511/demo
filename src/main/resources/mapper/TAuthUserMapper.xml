<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.TAuthUserMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.TAuthUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="roleId" property="roleid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="userImg" property="userimg" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userType, roleId, username, password, sex, nickname, phone, email, address, remark, 
    userImg, status, createTime, updateTime
  </sql>

  <select id="selectRoles" resultType="string">
      SELECT
          tar.roleSign
      FROM
          t_auth_role tar,
          t_auth_user_role taur,
          t_auth_user tau
      WHERE
          tau.id = taur.userId
      AND taur.roleId = tar.id
      AND tau.username = #{username};

  </select>

  <select id="selectPermissions" resultType="string">
      SELECT
          tap.permissionSign
      FROM
          t_auth_user tau,
          t_auth_permission tap,
          t_auth_role_permission tarp
      WHERE
          tau.roleId = tarp.roleId
      AND tap.status = 1
      AND tarp.permissionId = tap.id
      AND tau.username = #{username};
  </select>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_auth_user
    where USERNAME = #{username}
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_auth_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectUserData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_auth_user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_auth_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.TAuthUser" >
    insert into t_auth_user (id, userType, roleId, 
      username, password, sex, 
      nickname, phone, email, 
      address, remark, userImg, 
      status, createTime, updateTime
      )
    values (#{id,jdbcType=BIGINT}, #{usertype,jdbcType=INTEGER}, #{roleid,jdbcType=BIGINT}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{userimg,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.TAuthUser" >
    insert into t_auth_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="userimg != null" >
        userImg,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null" >
        #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.TAuthUser" >
    update t_auth_user
    <set >
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userimg != null" >
        userImg = #{userimg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.TAuthUser" >
    update t_auth_user
    set userType = #{usertype,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      userImg = #{userimg,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>