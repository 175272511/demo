<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.TAuthPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.TAuthPermission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="permissionName" property="permissionname" jdbcType="VARCHAR" />
    <result column="permissionSign" property="permissionsign" jdbcType="VARCHAR" />
    <result column="href" property="href" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, permissionName, permissionSign, href, description, status, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_auth_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_auth_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.TAuthPermission" >
    insert into t_auth_permission (id, permissionName, permissionSign, 
      href, description, status, 
      createTime)
    values (#{id,jdbcType=BIGINT}, #{permissionname,jdbcType=VARCHAR}, #{permissionsign,jdbcType=VARCHAR}, 
      #{href,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.TAuthPermission" >
    insert into t_auth_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="permissionname != null" >
        permissionName,
      </if>
      <if test="permissionsign != null" >
        permissionSign,
      </if>
      <if test="href != null" >
        href,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="permissionname != null" >
        #{permissionname,jdbcType=VARCHAR},
      </if>
      <if test="permissionsign != null" >
        #{permissionsign,jdbcType=VARCHAR},
      </if>
      <if test="href != null" >
        #{href,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.TAuthPermission" >
    update t_auth_permission
    <set >
      <if test="permissionname != null" >
        permissionName = #{permissionname,jdbcType=VARCHAR},
      </if>
      <if test="permissionsign != null" >
        permissionSign = #{permissionsign,jdbcType=VARCHAR},
      </if>
      <if test="href != null" >
        href = #{href,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.TAuthPermission" >
    update t_auth_permission
    set permissionName = #{permissionname,jdbcType=VARCHAR},
      permissionSign = #{permissionsign,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>